import{_ as e,c as t,a0 as o,o as r}from"./chunks/framework.OqxnQCTf.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"AI场景/知识库/RAG/评判标准/评判标准.md","filePath":"AI场景/知识库/RAG/评判标准/评判标准.md"}'),l={name:"AI场景/知识库/RAG/评判标准/评判标准.md"};function i(n,a,s,c,d,p){return r(),t("div",null,a[0]||(a[0]=[o('<h2 id="rag解析文档的衡量标准" tabindex="-1">RAG解析文档的衡量标准 <a class="header-anchor" href="#rag解析文档的衡量标准" aria-label="Permalink to &quot;RAG解析文档的衡量标准&quot;">​</a></h2><h2 id="检索的召回率与准确率" tabindex="-1">检索的召回率与准确率 <a class="header-anchor" href="#检索的召回率与准确率" aria-label="Permalink to &quot;检索的召回率与准确率&quot;">​</a></h2><h2 id="知识图谱是如何解决多跳问答和跨文档查询的" tabindex="-1">知识图谱是如何解决多跳问答和跨文档查询的 <a class="header-anchor" href="#知识图谱是如何解决多跳问答和跨文档查询的" aria-label="Permalink to &quot;知识图谱是如何解决多跳问答和跨文档查询的&quot;">​</a></h2><blockquote><p>if 文档满足以下任意条件:</p><ol><li>含超过50个实体互连</li><li>需处理NLP时间表达式（如&quot;三个月前&quot;→2024-03-01）</li><li>查询含2层以上逻辑嵌套</li><li>涉及跨表/跨文档关系验证</li></ol><p>then 启用知识图谱</p><p>else 使用传统检索</p></blockquote><p>RAGFlow的检索优势不仅源于多模态检索架构（知识图谱+关键词+向量），更核心的是在语义理解层实现了三重降噪： ▸ 词形归一化（Porter+WordNet）消除词法干扰 ▸ 简繁/全半角转换突破字符形态壁垒 ▸ 动态Trie树支持用户词典的实时热加载</p>',5)]))}const _=e(l,[["render",i]]);export{u as __pageData,_ as default};
