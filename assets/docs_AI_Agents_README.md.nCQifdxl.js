import{_ as t,c as e,a0 as o,o as i}from"./chunks/framework.OqxnQCTf.js";const s="/llm-study/assets/img.D1Or8NiU.png",r="/llm-study/assets/img.FV4QhKtm.png",u=JSON.parse('{"title":"AI Agents","description":"","frontmatter":{},"headers":[],"relativePath":"docs/AI+Agents/README.md","filePath":"docs/AI+Agents/README.md"}'),n={name:"docs/AI+Agents/README.md"};function l(p,a,c,d,h,m){return i(),e("div",null,a[0]||(a[0]=[o('<h1 id="ai-agents" tabindex="-1">AI Agents <a class="header-anchor" href="#ai-agents" aria-label="Permalink to &quot;AI Agents&quot;">​</a></h1><p>AI Agent = LLM（大模型） + Planning（规划） + Memory（记忆） + Tools（工具）</p><p><img src="'+s+'" alt="img.png"></p><h2 id="知识库" tabindex="-1">知识库 <a class="header-anchor" href="#知识库" aria-label="Permalink to &quot;知识库&quot;">​</a></h2><p>大模型并不是100%准确的，它会产生幻觉，主要是因为以下两点</p><ul><li>训练大模型的数据是有日期限制的，如果你询问大模型超出日期限制的问题，则大模型无法准确回答</li><li>大模型的数据来源于互联网，如果是公司内部的私有数据，则大模型无法感知</li></ul><p>因此知识库的出现就是为了解决大模型的数据准确性的问题。</p><p>大模型可以额外学习外接知识库中的知识，从而来精准回复用户。</p><blockquote><p>知识库中最典型的一个应用就是客服系统：</p><p>公司可以将用户所有问题以及答案记录在文档中，然后以知识库的形式投喂给大模型。这样当用户通过自然语言询问问题时，大模型就可以根据知识库中的内容给出更加准确的回答。</p></blockquote><h3 id="检索增强生成rag" tabindex="-1">检索增强生成RAG <a class="header-anchor" href="#检索增强生成rag" aria-label="Permalink to &quot;检索增强生成RAG&quot;">​</a></h3><blockquote><p>我们都知道大模型的训练数据是有截止日期的，那当我们需要依靠不包含在大模型训练集中的数据时，我们该怎么做呢?</p></blockquote><p>实现这一点的主要方法就是通过检索增强生成RAG，在这个过程中，首先检索外部数据，然后在生成步骤中将这些数据传递给LLM</p><p>我们可以将一个RAG的应用抽象为下图的5个过程： <img src="'+r+'" alt="img.png"></p><h1 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h1><ol><li><a href="https://waytoagi.feishu.cn/wiki/CT3UwDM8OiVmOOkohPbcV3JCndb" target="_blank" rel="noreferrer">https://waytoagi.feishu.cn/wiki/CT3UwDM8OiVmOOkohPbcV3JCndb</a></li></ol>',15)]))}const A=t(n,[["render",l]]);export{u as __pageData,A as default};
