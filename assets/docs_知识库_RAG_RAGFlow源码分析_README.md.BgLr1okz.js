import{_ as e,c as l,a0 as o,o as t}from"./chunks/framework.OqxnQCTf.js";const p=JSON.parse('{"title":"核心架构与流程概述","description":"","frontmatter":{},"headers":[],"relativePath":"docs/知识库/RAG/RAGFlow源码分析/README.md","filePath":"docs/知识库/RAG/RAGFlow源码分析/README.md"}'),i={name:"docs/知识库/RAG/RAGFlow源码分析/README.md"};function r(c,a,n,d,s,u){return t(),l("div",null,a[0]||(a[0]=[o('<h1 id="核心架构与流程概述" tabindex="-1">核心架构与流程概述 <a class="header-anchor" href="#核心架构与流程概述" aria-label="Permalink to &quot;核心架构与流程概述&quot;">​</a></h1><p>RAGFlow 基于 &quot;深度文档理解 + 检索增强生成&quot; 的核心架构，其交互流程可分为以下阶段：</p><h2 id="文档预处理阶段" tabindex="-1">文档预处理阶段 <a class="header-anchor" href="#文档预处理阶段" aria-label="Permalink to &quot;文档预处理阶段&quot;">​</a></h2><ul><li>支持 Word/PPT/Excel/PDF/扫描件/网页等异构数据解析</li><li>通过 deepdoc 模块实现深度语义分析（如表格理解、图像 OCR 增强）</li><li>基于模板的智能分块（Template-based chunking），保留上下文关联性</li></ul><blockquote><p>上传文档进行切分，然后转化为向量存储</p></blockquote><hr><blockquote><p>当用户进行询问时，会进行检索，对结果数据进行优化 =&gt; 最终形成对应的上下文prompt进行LLM的询问</p></blockquote><blockquote><p>对LLM的结果进行解析、思考链的解析和展示</p></blockquote><h2 id="检索阶段" tabindex="-1">检索阶段 <a class="header-anchor" href="#检索阶段" aria-label="Permalink to &quot;检索阶段&quot;">​</a></h2><ul><li>多路召回（关键词/向量/全文检索）结合</li><li>融合重排序（fused re-ranking）提升结果相关性</li><li>支持 Elasticsearch 或 Infinity 作为存储引擎</li></ul><h2 id="生成阶段" tabindex="-1">生成阶段 <a class="header-anchor" href="#生成阶段" aria-label="Permalink to &quot;生成阶段&quot;">​</a></h2><ul><li>通过 LLM 整合检索结果生成回答</li><li>引用溯源可视化（Grounded citations）减少幻觉</li><li>支持自定义 prompt 模板</li></ul>',12)]))}const m=e(i,[["render",r]]);export{p as __pageData,m as default};
