import{_ as e,c as l,a0 as r,o as i}from"./chunks/framework.OqxnQCTf.js";const f=JSON.parse('{"title":"RAGFlow源码学习流程","description":"","frontmatter":{},"headers":[],"relativePath":"知识库/RAG/RAGFlow源码分析/study.md","filePath":"知识库/RAG/RAGFlow源码分析/study.md"}'),o={name:"知识库/RAG/RAGFlow源码分析/study.md"};function t(n,a,h,d,c,u){return i(),l("div",null,a[0]||(a[0]=[r('<blockquote><p>深度源码分析建议结合具体使用场景，可重点关注deepdoc文档解析实现与graphrag图增强检索模块。开发者可通过Docker调试环境（docker/docker-compose.yml）快速搭建测试环境</p></blockquote><h1 id="ragflow源码学习流程" tabindex="-1">RAGFlow源码学习流程 <a class="header-anchor" href="#ragflow源码学习流程" aria-label="Permalink to &quot;RAGFlow源码学习流程&quot;">​</a></h1><p><a href="https://github.com/infiniflow/ragflow" target="_blank" rel="noreferrer">https://github.com/infiniflow/ragflow</a></p><p>核心亮点在于 <code>深度文档解析（DeepDoc）</code> 和 <code>混合检索能力</code> ，支持多种文件格式（PDF、Word、Excel、PPT等）和结构化/非结构化数据的统一处理</p><h2 id="架构速成-核心概念-文档解析" tabindex="-1">架构速成（核心概念+文档解析） <a class="header-anchor" href="#架构速成-核心概念-文档解析" aria-label="Permalink to &quot;架构速成（核心概念+文档解析）&quot;">​</a></h2><h3 id="理论掌握" tabindex="-1">理论掌握 <a class="header-anchor" href="#理论掌握" aria-label="Permalink to &quot;理论掌握&quot;">​</a></h3><ul><li>RAG双阶段架构：检索(Retrieval)与生成(Generation)的交互机制</li><li>文档解析技术栈：PDF/HTML/Markdown的解析差异（重点研究ragflow源码中的deepdoc/模块）</li><li>文本分块算法：调试recursive_splitter.py并可视化分块效果</li></ul><h3 id="实战" tabindex="-1">实战 <a class="header-anchor" href="#实战" aria-label="Permalink to &quot;实战&quot;">​</a></h3><ul><li>用Echarts实现文档解析过程的可视化（展示原始文本→分块→向量化的数据流）</li><li>开发分块策略配置界面（滑动窗口/段落分割的参数调节）</li></ul><h2 id="检索引擎攻坚-向量-关键词混合检索" tabindex="-1">检索引擎攻坚（向量+关键词混合检索） <a class="header-anchor" href="#检索引擎攻坚-向量-关键词混合检索" aria-label="Permalink to &quot;检索引擎攻坚（向量+关键词混合检索）&quot;">​</a></h2><h3 id="理论掌握-1" tabindex="-1">理论掌握 <a class="header-anchor" href="#理论掌握-1" aria-label="Permalink to &quot;理论掌握&quot;">​</a></h3><ul><li>向量索引构建：分析vector_indexer.py的批处理逻辑</li><li>混合检索策略：跟踪HybridRetrieval.run()的多路召回机制</li><li>重排序算法：在reranker/模块插入调试日志观察分数变化</li></ul><h3 id="实战-1" tabindex="-1">实战 <a class="header-anchor" href="#实战-1" aria-label="Permalink to &quot;实战&quot;">​</a></h3><ul><li>开发检索结果对比面板（并列展示纯向量/关键词/混合检索的效果）</li><li>实现检索耗时监控组件（记录各阶段时间消耗）</li></ul><h2 id="业务流程再造-对接现有系统" tabindex="-1">业务流程再造（对接现有系统） <a class="header-anchor" href="#业务流程再造-对接现有系统" aria-label="Permalink to &quot;业务流程再造（对接现有系统）&quot;">​</a></h2><h3 id="理论掌握-2" tabindex="-1">理论掌握 <a class="header-anchor" href="#理论掌握-2" aria-label="Permalink to &quot;理论掌握&quot;">​</a></h3><ul><li>工作流引擎：通过dag_controller.py理解任务编排逻辑</li><li>大模型适配层：修改llm/adapters/huggingface.py测试不同模型</li><li>权限控制系统：复写api/auth/模块实现前端权限映射</li></ul><h3 id="实战-2" tabindex="-1">实战 <a class="header-anchor" href="#实战-2" aria-label="Permalink to &quot;实战&quot;">​</a></h3><ul><li>将现有前端系统接入RAGFlow（重点改造问答界面和知识库管理）</li><li>开发实时推理监控面板（展示GPU利用率/响应时间/QPS）</li></ul><h1 id="需要明白的知识点" tabindex="-1">需要明白的知识点 <a class="header-anchor" href="#需要明白的知识点" aria-label="Permalink to &quot;需要明白的知识点&quot;">​</a></h1><h2 id="检索测试" tabindex="-1">检索测试 <a class="header-anchor" href="#检索测试" aria-label="Permalink to &quot;检索测试&quot;">​</a></h2><ul><li>相似度阈值：我们使用混合相似度得分来评估两行文本之间的距离。 它是加权关键词相似度和向量余弦相似度。 如果查询和块之间的相似度小于此阈值，则该块将被过滤掉。默认设置为 0.2，也就是说文本块的混合相似度得分至少 20 才会被召回。</li><li>关键字相似度权重：我们使用混合相似性评分来评估两行文本之间的距离。它是加权关键字相似性和矢量余弦相似性或rerank得分（0〜1）。两个权重的总和为1.0。</li><li>Rerank模型：非必选项：若不选择 rerank 模型，系统将默认采用关键词相似度与向量余弦相似度相结合的混合查询方式；如果设置了 rerank 模型，则混合查询中的向量相似度部分将被 rerank 打分替代。请注意：采用 rerank 模型会非常耗时。</li><li>使用知识图谱：是否检索与所选知识库对应的知识图谱相关文本块，以处理复杂的多跳问题？这一过程将涉及对实体、关系和社区报告文本块的多次检索，会显著延长检索时间</li></ul>',22)]))}const p=e(o,[["render",t]]);export{f as __pageData,p as default};
